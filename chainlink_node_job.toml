type = "directrequest"
schemaVersion = 1
name = "validate_full_stack_operator_vars"
externalJobID = "d2aab9b5-9c92-4e95-9ac4-17c6e38ea278"
maxTaskDuration = "0s"
contractAddress = "0xF1a252307Ff9F3fbB9598c9a181385122948b8Ae"
evmChainID = "5"
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log   [type=ethabidecodelog
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type=cborparse data="$(decode_log.data)"]

    ds [type="http"
              method=POST
              url="https://399d-195-250-172-101.eu.ngrok.io/val"
              requestData="{\\"job_run_id\\": $(jobSpec.externalJobID), \\"data\\": {\\"block_num\\": $(decode_cbor.block_num), \\"offer_id\\": $(decode_cbor.offer_id)}}"
              allowUnrestrictedNetworkAccess=true
              ]
parse        [type=jsonparse path="data" data="$(ds)"]
encode_data [type="ethabiencode" abi="(bytes32 requestId, uint256 _offer_id, uint256 _success_count, uint256 _num_windows, uint16 _status, string _result)" data="{ \\"requestId\\": $(decode_log.requestId), \\"_offer_id\\": $(parse.offer_id),  \\"_success_count\\": $(parse.success_count),  \\"_num_windows\\": $(parse.num_windows),  \\"_status\\": $(parse.status),  \\"_result\\": $(parse.result) }"]
encode_tx    [type="ethabiencode"
                  abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\":   $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                  ]
submit_tx    [type="ethtx" to="0xF1a252307Ff9F3fbB9598c9a181385122948b8Ae" data="$(encode_tx)"]


decode_log -> decode_cbor -> ds -> parse -> encode_data -> encode_tx -> submit_tx
"""